@{
    ViewData["Title"] = "角色设置";
    ViewBag.CurrentMenu = "Role";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6"><h1>角色设置</h1></div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">角色设置</a></li>
                    <li class="breadcrumb-item active">浏览</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-inline">
                        <h4 class="card-title col-md-2 d-md-inline text-right">查询条件</h4>
                        <div class="input-group col-md-4">
                            @*<span class="input-group-addon"><i class="fade fa-user"></i></span>*@
                            <input type="text" id="txt_search_role" class="form-control" placeholder="角色名称关键字">
                        </div>
                        <div class="input-group col-md-4">
                            @*<span class="input-group-addon"><i class="fade fa-code"></i></span>*@
                            <input type="text" id="txt_search_code" class="form-control" placeholder="角色代码关键字">
                        </div>
                        <button type="button" id="btn_query" class="btn btn-primary"><i class="fas fa-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div id="tab_toolbar" class="btn-group">
                        <button type="button" id="btn_add" class="btn btn-default"><i class="fas fa-plus"></i> 新增</button>
                        <button type="button" id="btn_edit" class="btn btn-default"><i class="fas fa-edit"></i> 编辑</button>
                        <button type="button" id="btn_remove" class="btn btn-default"><i class="fas fa-trash"></i> 删除</button>
                    </div>
                    <table id="tab_roles" class="table table-hover"></table>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    $(function () {
        //初始化table
        var mgrTable = new tableView.manageTable({
            tableId: "tab_roles",
            toolbarId:"tab_toolbar",
            showDetail: true,
            ajaxUrl: "/Role/PaginatorAsync",
            ajaxMethod: "get",
            queryParamsCallback: function () {
                return {
                    name: $("#txt_search_role").val(),
                    code: $("#txt_search_code").val()
                }
            },
            dataColumns: [
                { checkbox: true, width:"50", align: "center", valign: "middle" },
                { field: "name", title: "角色", align: "center", valign: "middle" },
                { field: "code", title: "代码", align: "center", valign: "middle" },
                { field: "remarks", title: "备注", align: "center", valign: "middle" }
            ],
            onExpandRowCallback: function (index, row, $detail) {  //行展开事件
                //获取指定角色授权
                var rootAuths = $.getJSON("/Role/GetAuthorizesByRole", { code: row.code }, function (data) {
                    return data;
                });
                //初始模块集table
                new tableView.detailTable({
                    //rowCode: row.code,
                    detail: $detail,
                    showDetail: true,
                    ajaxUrl: "/Permission/GetPermissionAllAsync",   //获取所有授权
                    dataColumns: [
                        { field: "named", align: "left", valign: "middle" },
                        { field: "typeAt", align: "left", valign: "middle" },
                        { field: "command", align: "left", valign: "middle" },
                        { field: "remarks", align: "left", valign: "middle" }
                    ],
                    onExpandRowCallback: function (index, row, $detail) {
                        //初始化模块table
                        new tableView.detailTable({
                            data: row.childs,
                            detail: $detail,
                            dataColumns: [
                                { field: "named", width: "120", align: "center", valign: "middle" },
                                { field: "enabled", width: "120", align: "center", valign: "middle" },
                                { field: "", width: "700", align: "left", valign: "middle", formatter: function (index, row, value) {
                                    var domEle = $("<div class='col-sm-offset-2 col-sm-10'></div>");
                                    $.each(row.childs, function (i, obj) {
                                        var result = isExist(obj.id, rootAuths.responseJSON) ? "checked" : "";
                                        domEle.append("<div class='checkbox d-md-inline  ml-1 mr-1'><label><input type='checkbox' value='" + obj.id + "' checked='" + result + "'> " + obj.named + "</label></div>");
                                    });
                                    return domEle.html();
                                }}
                            ]
                        });
                    }
                });
            }
        });

        //指定键值是否存在
        function isExist(id, json) {
            if (json != null && json != "undefined") {
                $.each(json, function (i, obj) {
                    return obj.id == id ? true : isExist(id, obj.childs);
                });
            }
            return false;
        }

        //搜索
        $("#btn_query").click(function () {
            mgrTable.setRefresh();
        });

        //新增角色
        $("#btn_add").click(function () {
            modalUtils.showModal({
                remote: "/Role/EditForm",
                title: "添加新角色",
                onOpenedEvent: function () {
                    formUtils.clear($("#frm_role_edit"));
                },
                onClosedEvent: function () {
                    mgrTable.setRefresh();
                },
                onSaveEvent: function () {
                    var frmObj = $("#frm_role_edit");
                    $.post("/Role/AddAsync", { model: frmObj.serializeObject() }, function (result) {
                        layerUtils.alert(result.message);
                        if (result.success)
                            formUtils.clear(frmObj);
                    });
                }
            });
        });

        //编辑角色
        $("#btn_edit").click(function () {
            var selectRows = mgrTable.getSelecteds();
            if (selectRows.length != 1) {
                layerUtils.info("请选择有效数据行", 2);
                return;
            }
            modalUtils.showModal({
                remote: "/Role/EditForm",
                title: "编辑角色",
                onOpenedEvent: function () {
                    formUtils.echo($("#frm_role_edit"), selectRows[0]); //表单回显
                },
                onClosedEvent: function () {
                    mgrTable.setRefresh();
                },
                onSaveEvent: function () {
                    var frmObj = $("#frm_role_edit")
                    $.post("/Role/EditAsync", { model: frmObj.serializeObject() }, function (result) {
                        layerUtils.alert(result.message);
                        if (result.success)
                            formUtils.clear(frmObj);
                    });
                }
            });
        });

        //删除
        $("#btn_remove").click(function () {
            var selectRows = mgrTable.getSelecteds();
            if (selectRows.length != 1) {
                layerUtils.info("请选择有效数据行。", 2);
                return;
            }
            layerUtils.confirm("确定删除选择项？其关联数据也同时删除！", function () {
                $.post("/Role/RemoveAsync", { id: selectRows[0].id }, function (result) {
                    layerUtils.alert(result.message);
                    if (result.success)
                        mgrTable.setRefresh();
                });
            });
        });
    })
</script>