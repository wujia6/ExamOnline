// <auto-generated />
using System;
using Domain.Profile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    [Migration("20191015053503_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.AnwserAgg.AnswerInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExamInfoID");

                    b.Property<string>("Remarks");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Score");

                    b.Property<int?>("StudentInfoID");

                    b.HasKey("ID");

                    b.HasIndex("ExamInfoID");

                    b.HasIndex("StudentInfoID");

                    b.ToTable("AnswerInfos");
                });

            modelBuilder.Entity("Domain.Entities.ClassAgg.ClassExam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassInfoID");

                    b.Property<int?>("ExamInfoID");

                    b.Property<string>("Remarks");

                    b.HasKey("ID");

                    b.HasIndex("ClassInfoID");

                    b.HasIndex("ExamInfoID");

                    b.ToTable("ClassExams");
                });

            modelBuilder.Entity("Domain.Entities.ClassAgg.ClassInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("Grade");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.ToTable("ClassInfos");
                });

            modelBuilder.Entity("Domain.Entities.ClassAgg.ClassTeacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassInfoID");

                    b.Property<string>("Remarks");

                    b.Property<int?>("TeacherInfoID");

                    b.HasKey("ID");

                    b.HasIndex("ClassInfoID");

                    b.HasIndex("TeacherInfoID");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("Domain.Entities.ExamAgg.ExamInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginTime");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("ExamInfos");
                });

            modelBuilder.Entity("Domain.Entities.QuestionAgg.QuestionInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired();

                    b.Property<int>("Category");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("ExamInfoID");

                    b.Property<int>("Level");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.HasIndex("ExamInfoID");

                    b.ToTable("QuestionInfos");
                });

            modelBuilder.Entity("Domain.Entities.UserAgg.AdminInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Age");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Domain.Entities.UserAgg.StudentInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Age");

                    b.Property<int?>("ClassInfoID");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Dormitory")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Gender");

                    b.Property<string>("IdentityNo")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ParentTel")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<string>("StudentNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.HasIndex("ClassInfoID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Domain.Entities.UserAgg.TeacherInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Age");

                    b.Property<int>("Course");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int?>("ExamInfoID");

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Profssion")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.HasIndex("ExamInfoID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Domain.Entities.AnwserAgg.AnswerInfo", b =>
                {
                    b.HasOne("Domain.Entities.ExamAgg.ExamInfo", "ExamInfo")
                        .WithMany("AnswerInfos")
                        .HasForeignKey("ExamInfoID");

                    b.HasOne("Domain.Entities.UserAgg.StudentInfo", "StudentInfo")
                        .WithMany("AnswerInfos")
                        .HasForeignKey("StudentInfoID");
                });

            modelBuilder.Entity("Domain.Entities.ClassAgg.ClassExam", b =>
                {
                    b.HasOne("Domain.Entities.ClassAgg.ClassInfo", "ClassInfo")
                        .WithMany("ClassExams")
                        .HasForeignKey("ClassInfoID");

                    b.HasOne("Domain.Entities.ExamAgg.ExamInfo", "ExamInfo")
                        .WithMany("ClassExams")
                        .HasForeignKey("ExamInfoID");
                });

            modelBuilder.Entity("Domain.Entities.ClassAgg.ClassTeacher", b =>
                {
                    b.HasOne("Domain.Entities.ClassAgg.ClassInfo", "ClassInfo")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassInfoID");

                    b.HasOne("Domain.Entities.UserAgg.TeacherInfo", "TeacherInfo")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherInfoID");
                });

            modelBuilder.Entity("Domain.Entities.QuestionAgg.QuestionInfo", b =>
                {
                    b.HasOne("Domain.Entities.ExamAgg.ExamInfo", "ExamInfo")
                        .WithMany("QuestionInfos")
                        .HasForeignKey("ExamInfoID");
                });

            modelBuilder.Entity("Domain.Entities.UserAgg.StudentInfo", b =>
                {
                    b.HasOne("Domain.Entities.ClassAgg.ClassInfo", "ClassInfo")
                        .WithMany("StudentInfos")
                        .HasForeignKey("ClassInfoID");
                });

            modelBuilder.Entity("Domain.Entities.UserAgg.TeacherInfo", b =>
                {
                    b.HasOne("Domain.Entities.ExamAgg.ExamInfo")
                        .WithMany("TeacherInfos")
                        .HasForeignKey("ExamInfoID");
                });
#pragma warning restore 612, 618
        }
    }
}
